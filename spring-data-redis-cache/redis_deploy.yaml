apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deploy-server
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDIS_SERVICE_IP
              value: "$(REDIS_SERVICE_SERVICE_HOST)"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
          volumeMounts:
            - name: redis-config-volume
              mountPath: /opt/redis
              readOnly: true
          command: ["redis-server", "/opt/redis/redis.conf", "--requirepass", "$(REDIS_PASSWORD)"]
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      volumes:
        - name: redis-config-volume
          configMap:
            name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    appendonly yes
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
type: Opaque
data:
  redis-password: cGFzc3dvcmQ=